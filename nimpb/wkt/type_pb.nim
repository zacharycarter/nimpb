# Generated by protoc_gen_nim. Do not edit!

import base64
import intsets
import json
import strutils

import nimpb/nimpb
import nimpb/json as nimpb_json

import nimpb/wkt/any
import nimpb/wkt/source_context_pb

type
    google_protobuf_Syntax* {.pure.} = enum
        SYNTAX_PROTO2 = 0
        SYNTAX_PROTO3 = 1
    google_protobuf_Field_Kind* {.pure.} = enum
        TYPE_UNKNOWN = 0
        TYPE_DOUBLE = 1
        TYPE_FLOAT = 2
        TYPE_INT64 = 3
        TYPE_UINT64 = 4
        TYPE_INT32 = 5
        TYPE_FIXED64 = 6
        TYPE_FIXED32 = 7
        TYPE_BOOL = 8
        TYPE_STRING = 9
        TYPE_GROUP = 10
        TYPE_MESSAGE = 11
        TYPE_BYTES = 12
        TYPE_UINT32 = 13
        TYPE_ENUM = 14
        TYPE_SFIXED32 = 15
        TYPE_SFIXED64 = 16
        TYPE_SINT32 = 17
        TYPE_SINT64 = 18
    google_protobuf_Field_Cardinality* {.pure.} = enum
        CARDINALITY_UNKNOWN = 0
        CARDINALITY_OPTIONAL = 1
        CARDINALITY_REQUIRED = 2
        CARDINALITY_REPEATED = 3
    google_protobuf_Type* = ref google_protobuf_TypeObj
    google_protobuf_TypeObj* = object of Message
        name: string
        fields: seq[google_protobuf_Field]
        oneofs: seq[string]
        options: seq[google_protobuf_Option]
        sourceContext: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_Field* = ref google_protobuf_FieldObj
    google_protobuf_FieldObj* = object of Message
        kind: google_protobuf_Field_Kind
        cardinality: google_protobuf_Field_Cardinality
        number: int32
        name: string
        typeUrl: string
        oneofIndex: int32
        packed: bool
        options: seq[google_protobuf_Option]
        jsonName: string
        defaultValue: string
    google_protobuf_Enum* = ref google_protobuf_EnumObj
    google_protobuf_EnumObj* = object of Message
        name: string
        enumvalue: seq[google_protobuf_EnumValue]
        options: seq[google_protobuf_Option]
        sourceContext: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_EnumValue* = ref google_protobuf_EnumValueObj
    google_protobuf_EnumValueObj* = object of Message
        name: string
        number: int32
        options: seq[google_protobuf_Option]
    google_protobuf_Option* = ref google_protobuf_OptionObj
    google_protobuf_OptionObj* = object of Message
        name: string
        value: google_protobuf_Any

proc newgoogle_protobuf_Option*(): google_protobuf_Option
proc newgoogle_protobuf_Option*(data: string): google_protobuf_Option
proc newgoogle_protobuf_Option*(data: seq[byte]): google_protobuf_Option
proc writegoogle_protobuf_Option*(stream: Stream, message: google_protobuf_Option)
proc readgoogle_protobuf_Option*(stream: Stream): google_protobuf_Option
proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64
proc toJson*(message: google_protobuf_Option): JsonNode
proc parsegoogle_protobuf_Option*(obj: JsonNode): google_protobuf_Option

proc newgoogle_protobuf_Field*(): google_protobuf_Field
proc newgoogle_protobuf_Field*(data: string): google_protobuf_Field
proc newgoogle_protobuf_Field*(data: seq[byte]): google_protobuf_Field
proc writegoogle_protobuf_Field*(stream: Stream, message: google_protobuf_Field)
proc readgoogle_protobuf_Field*(stream: Stream): google_protobuf_Field
proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64
proc toJson*(message: google_protobuf_Field): JsonNode
proc parsegoogle_protobuf_Field*(obj: JsonNode): google_protobuf_Field

proc newgoogle_protobuf_Type*(): google_protobuf_Type
proc newgoogle_protobuf_Type*(data: string): google_protobuf_Type
proc newgoogle_protobuf_Type*(data: seq[byte]): google_protobuf_Type
proc writegoogle_protobuf_Type*(stream: Stream, message: google_protobuf_Type)
proc readgoogle_protobuf_Type*(stream: Stream): google_protobuf_Type
proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64
proc toJson*(message: google_protobuf_Type): JsonNode
proc parsegoogle_protobuf_Type*(obj: JsonNode): google_protobuf_Type

proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue
proc newgoogle_protobuf_EnumValue*(data: string): google_protobuf_EnumValue
proc newgoogle_protobuf_EnumValue*(data: seq[byte]): google_protobuf_EnumValue
proc writegoogle_protobuf_EnumValue*(stream: Stream, message: google_protobuf_EnumValue)
proc readgoogle_protobuf_EnumValue*(stream: Stream): google_protobuf_EnumValue
proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64
proc toJson*(message: google_protobuf_EnumValue): JsonNode
proc parsegoogle_protobuf_EnumValue*(obj: JsonNode): google_protobuf_EnumValue

proc newgoogle_protobuf_Enum*(): google_protobuf_Enum
proc newgoogle_protobuf_Enum*(data: string): google_protobuf_Enum
proc newgoogle_protobuf_Enum*(data: seq[byte]): google_protobuf_Enum
proc writegoogle_protobuf_Enum*(stream: Stream, message: google_protobuf_Enum)
proc readgoogle_protobuf_Enum*(stream: Stream): google_protobuf_Enum
proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64
proc toJson*(message: google_protobuf_Enum): JsonNode
proc parsegoogle_protobuf_Enum*(obj: JsonNode): google_protobuf_Enum

proc fullyQualifiedName*(T: typedesc[google_protobuf_Option]): string = "google.protobuf.Option"

proc readgoogle_protobuf_OptionImpl(stream: Stream): Message = readgoogle_protobuf_Option(stream)
proc writegoogle_protobuf_OptionImpl(stream: Stream, msg: Message) = writegoogle_protobuf_Option(stream, google_protobuf_Option(msg))
proc toJsongoogle_protobuf_OptionImpl(msg: Message): JsonNode = toJson(google_protobuf_Option(msg))
proc fromJsongoogle_protobuf_OptionImpl(node: JsonNode): Message = parsegoogle_protobuf_Option(node)

proc google_protobuf_OptionProcs*(): MessageProcs =
    result.readImpl = readgoogle_protobuf_OptionImpl
    result.writeImpl = writegoogle_protobuf_OptionImpl
    result.toJsonImpl = toJsongoogle_protobuf_OptionImpl
    result.fromJsonImpl = fromJsongoogle_protobuf_OptionImpl

proc newgoogle_protobuf_Option*(): google_protobuf_Option =
    new(result)
    initMessage(result[])
    result.procs = google_protobuf_OptionProcs()
    result.name = ""
    result.value = nil

proc clearname*(message: google_protobuf_Option) =
    message.name = ""

proc setname*(message: google_protobuf_Option, value: string) =
    message.name = value

proc name*(message: google_protobuf_Option): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Option, value: string) {.inline.} =
    setname(message, value)

proc clearvalue*(message: google_protobuf_Option) =
    message.value = nil
    clearFields(message, [2])

proc hasvalue*(message: google_protobuf_Option): bool =
    result = hasField(message, 2)

proc setvalue*(message: google_protobuf_Option, value: google_protobuf_Any) =
    message.value = value
    setField(message, 2)

proc value*(message: google_protobuf_Option): google_protobuf_Any {.inline.} =
    message.value

proc `value=`*(message: google_protobuf_Option, value: google_protobuf_Any) {.inline.} =
    setvalue(message, value)

proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64 =
    if len(message.name) > 0:
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if hasvalue(message):
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Any(message.value))
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Option*(stream: Stream, message: google_protobuf_Option) =
    if len(message.name) > 0:
        protoWriteString(stream, message.name, 1)
    if hasvalue(message):
        writeMessage(stream, message.value, 2)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Option*(stream: Stream): google_protobuf_Option =
    result = newgoogle_protobuf_Option()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setvalue(result, newgoogle_protobuf_Any(data))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Option): JsonNode =
    result = newJObject()
    if len(message.name) > 0:
        result["name"] = %message.name
    if hasvalue(message):
        result["value"] = toJson(message.value)

proc parsegoogle_protobuf_Option*(obj: JsonNode): google_protobuf_Option =
    result = newgoogle_protobuf_Option()
    var node: JsonNode
    if obj.kind != JObject:
        raise newException(nimpb_json.ParseError, "object expected")
    node = getJsonField(obj, "name", "name")
    if node != nil and node.kind != JNull:
        setname(result, parseString(node))
    node = getJsonField(obj, "value", "value")
    if node != nil and node.kind != JNull:
        setvalue(result, parsegoogle_protobuf_Any(node))

proc serialize*(message: google_protobuf_Option): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Option(ss, message)
    result = ss.data

proc newgoogle_protobuf_Option*(data: string): google_protobuf_Option =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Option(ss)

proc newgoogle_protobuf_Option*(data: seq[byte]): google_protobuf_Option =
    let
        ss = newStringStream(cast[string](data))
    result = readgoogle_protobuf_Option(ss)


proc fullyQualifiedName*(T: typedesc[google_protobuf_Field]): string = "google.protobuf.Field"

proc readgoogle_protobuf_FieldImpl(stream: Stream): Message = readgoogle_protobuf_Field(stream)
proc writegoogle_protobuf_FieldImpl(stream: Stream, msg: Message) = writegoogle_protobuf_Field(stream, google_protobuf_Field(msg))
proc toJsongoogle_protobuf_FieldImpl(msg: Message): JsonNode = toJson(google_protobuf_Field(msg))
proc fromJsongoogle_protobuf_FieldImpl(node: JsonNode): Message = parsegoogle_protobuf_Field(node)

proc google_protobuf_FieldProcs*(): MessageProcs =
    result.readImpl = readgoogle_protobuf_FieldImpl
    result.writeImpl = writegoogle_protobuf_FieldImpl
    result.toJsonImpl = toJsongoogle_protobuf_FieldImpl
    result.fromJsonImpl = fromJsongoogle_protobuf_FieldImpl

proc newgoogle_protobuf_Field*(): google_protobuf_Field =
    new(result)
    initMessage(result[])
    result.procs = google_protobuf_FieldProcs()
    result.kind = google_protobuf_Field_Kind.TYPE_UNKNOWN
    result.cardinality = google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN
    result.number = 0
    result.name = ""
    result.typeUrl = ""
    result.oneofIndex = 0
    result.packed = false
    result.options = @[]
    result.jsonName = ""
    result.defaultValue = ""

proc clearkind*(message: google_protobuf_Field) =
    message.kind = google_protobuf_Field_Kind.TYPE_UNKNOWN

proc setkind*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) =
    message.kind = value

proc kind*(message: google_protobuf_Field): google_protobuf_Field_Kind {.inline.} =
    message.kind

proc `kind=`*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) {.inline.} =
    setkind(message, value)

proc clearcardinality*(message: google_protobuf_Field) =
    message.cardinality = google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN

proc setcardinality*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) =
    message.cardinality = value

proc cardinality*(message: google_protobuf_Field): google_protobuf_Field_Cardinality {.inline.} =
    message.cardinality

proc `cardinality=`*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) {.inline.} =
    setcardinality(message, value)

proc clearnumber*(message: google_protobuf_Field) =
    message.number = 0

proc setnumber*(message: google_protobuf_Field, value: int32) =
    message.number = value

proc number*(message: google_protobuf_Field): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setnumber(message, value)

proc clearname*(message: google_protobuf_Field) =
    message.name = ""

proc setname*(message: google_protobuf_Field, value: string) =
    message.name = value

proc name*(message: google_protobuf_Field): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setname(message, value)

proc cleartypeUrl*(message: google_protobuf_Field) =
    message.typeUrl = ""

proc settypeUrl*(message: google_protobuf_Field, value: string) =
    message.typeUrl = value

proc typeUrl*(message: google_protobuf_Field): string {.inline.} =
    message.typeUrl

proc `typeUrl=`*(message: google_protobuf_Field, value: string) {.inline.} =
    settypeUrl(message, value)

proc clearoneofIndex*(message: google_protobuf_Field) =
    message.oneofIndex = 0

proc setoneofIndex*(message: google_protobuf_Field, value: int32) =
    message.oneofIndex = value

proc oneofIndex*(message: google_protobuf_Field): int32 {.inline.} =
    message.oneofIndex

proc `oneofIndex=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setoneofIndex(message, value)

proc clearpacked*(message: google_protobuf_Field) =
    message.packed = false

proc setpacked*(message: google_protobuf_Field, value: bool) =
    message.packed = value

proc packed*(message: google_protobuf_Field): bool {.inline.} =
    message.packed

proc `packed=`*(message: google_protobuf_Field, value: bool) {.inline.} =
    setpacked(message, value)

proc clearoptions*(message: google_protobuf_Field) =
    message.options = @[]
    clearFields(message, [9])

proc hasoptions*(message: google_protobuf_Field): bool =
    result = hasField(message, 9) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 9)

proc addoptions*(message: google_protobuf_Field, value: google_protobuf_Option) =
    add(message.options, value)

proc options*(message: google_protobuf_Field): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearjsonName*(message: google_protobuf_Field) =
    message.jsonName = ""

proc setjsonName*(message: google_protobuf_Field, value: string) =
    message.jsonName = value

proc jsonName*(message: google_protobuf_Field): string {.inline.} =
    message.jsonName

proc `jsonName=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setjsonName(message, value)

proc cleardefaultValue*(message: google_protobuf_Field) =
    message.defaultValue = ""

proc setdefaultValue*(message: google_protobuf_Field, value: string) =
    message.defaultValue = value

proc defaultValue*(message: google_protobuf_Field): string {.inline.} =
    message.defaultValue

proc `defaultValue=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setdefaultValue(message, value)

proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64 =
    if message.kind != google_protobuf_Field_Kind.TYPE_UNKNOWN:
        result = result + sizeOfTag(1, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Field_Kind](message.kind)
    if message.cardinality != google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN:
        result = result + sizeOfTag(2, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Field_Cardinality](message.cardinality)
    if message.number != 0:
        result = result + sizeOfTag(3, WireType.Varint)
        result = result + sizeOfInt32(message.number)
    if len(message.name) > 0:
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if len(message.typeUrl) > 0:
        result = result + sizeOfTag(6, WireType.LengthDelimited)
        result = result + sizeOfString(message.typeUrl)
    if message.oneofIndex != 0:
        result = result + sizeOfTag(7, WireType.Varint)
        result = result + sizeOfInt32(message.oneofIndex)
    if message.packed != false:
        result = result + sizeOfTag(8, WireType.Varint)
        result = result + sizeOfBool(message.packed)
    for value in message.options:
        result = result + sizeOfTag(9, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if len(message.jsonName) > 0:
        result = result + sizeOfTag(10, WireType.LengthDelimited)
        result = result + sizeOfString(message.jsonName)
    if len(message.defaultValue) > 0:
        result = result + sizeOfTag(11, WireType.LengthDelimited)
        result = result + sizeOfString(message.defaultValue)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Field*(stream: Stream, message: google_protobuf_Field) =
    if message.kind != google_protobuf_Field_Kind.TYPE_UNKNOWN:
        protoWriteEnum(stream, message.kind, 1)
    if message.cardinality != google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN:
        protoWriteEnum(stream, message.cardinality, 2)
    if message.number != 0:
        protoWriteInt32(stream, message.number, 3)
    if len(message.name) > 0:
        protoWriteString(stream, message.name, 4)
    if len(message.typeUrl) > 0:
        protoWriteString(stream, message.typeUrl, 6)
    if message.oneofIndex != 0:
        protoWriteInt32(stream, message.oneofIndex, 7)
    if message.packed != false:
        protoWriteBool(stream, message.packed, 8)
    for value in message.options:
        writeMessage(stream, value, 9)
    if len(message.jsonName) > 0:
        protoWriteString(stream, message.jsonName, 10)
    if len(message.defaultValue) > 0:
        protoWriteString(stream, message.defaultValue, 11)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Field*(stream: Stream): google_protobuf_Field =
    result = newgoogle_protobuf_Field()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.Varint)
            setkind(result, protoReadEnum[google_protobuf_Field_Kind](stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setcardinality(result, protoReadEnum[google_protobuf_Field_Cardinality](stream))
        of 3:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, protoReadInt32(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 6:
            expectWireType(wireType, WireType.LengthDelimited)
            settypeUrl(result, protoReadString(stream))
        of 7:
            expectWireType(wireType, WireType.Varint)
            setoneofIndex(result, protoReadInt32(stream))
        of 8:
            expectWireType(wireType, WireType.Varint)
            setpacked(result, protoReadBool(stream))
        of 9:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 10:
            expectWireType(wireType, WireType.LengthDelimited)
            setjsonName(result, protoReadString(stream))
        of 11:
            expectWireType(wireType, WireType.LengthDelimited)
            setdefaultValue(result, protoReadString(stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Field): JsonNode =
    result = newJObject()
    if message.kind != google_protobuf_Field_Kind.TYPE_UNKNOWN:
        result["kind"] = toJson(message.kind)
    if message.cardinality != google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN:
        result["cardinality"] = toJson(message.cardinality)
    if message.number != 0:
        result["number"] = %message.number
    if len(message.name) > 0:
        result["name"] = %message.name
    if len(message.typeUrl) > 0:
        result["typeUrl"] = %message.typeUrl
    if message.oneofIndex != 0:
        result["oneofIndex"] = %message.oneofIndex
    if message.packed != false:
        result["packed"] = %message.packed
    if len(message.options) > 0:
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if len(message.jsonName) > 0:
        result["jsonName"] = %message.jsonName
    if len(message.defaultValue) > 0:
        result["defaultValue"] = %message.defaultValue

proc parsegoogle_protobuf_Field*(obj: JsonNode): google_protobuf_Field =
    result = newgoogle_protobuf_Field()
    var node: JsonNode
    if obj.kind != JObject:
        raise newException(nimpb_json.ParseError, "object expected")
    node = getJsonField(obj, "kind", "kind")
    if node != nil and node.kind != JNull:
        setkind(result, parseEnum[google_protobuf_Field_Kind](node))
    node = getJsonField(obj, "cardinality", "cardinality")
    if node != nil and node.kind != JNull:
        setcardinality(result, parseEnum[google_protobuf_Field_Cardinality](node))
    node = getJsonField(obj, "number", "number")
    if node != nil and node.kind != JNull:
        setnumber(result, parseSignedInt[int32](node))
    node = getJsonField(obj, "name", "name")
    if node != nil and node.kind != JNull:
        setname(result, parseString(node))
    node = getJsonField(obj, "type_url", "typeUrl")
    if node != nil and node.kind != JNull:
        settypeUrl(result, parseString(node))
    node = getJsonField(obj, "oneof_index", "oneofIndex")
    if node != nil and node.kind != JNull:
        setoneofIndex(result, parseSignedInt[int32](node))
    node = getJsonField(obj, "packed", "packed")
    if node != nil and node.kind != JNull:
        setpacked(result, parseBool(node))
    node = getJsonField(obj, "options", "options")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addoptions(result, parsegoogle_protobuf_Option(value))
    node = getJsonField(obj, "json_name", "jsonName")
    if node != nil and node.kind != JNull:
        setjsonName(result, parseString(node))
    node = getJsonField(obj, "default_value", "defaultValue")
    if node != nil and node.kind != JNull:
        setdefaultValue(result, parseString(node))

proc serialize*(message: google_protobuf_Field): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Field(ss, message)
    result = ss.data

proc newgoogle_protobuf_Field*(data: string): google_protobuf_Field =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Field(ss)

proc newgoogle_protobuf_Field*(data: seq[byte]): google_protobuf_Field =
    let
        ss = newStringStream(cast[string](data))
    result = readgoogle_protobuf_Field(ss)


proc fullyQualifiedName*(T: typedesc[google_protobuf_Type]): string = "google.protobuf.Type"

proc readgoogle_protobuf_TypeImpl(stream: Stream): Message = readgoogle_protobuf_Type(stream)
proc writegoogle_protobuf_TypeImpl(stream: Stream, msg: Message) = writegoogle_protobuf_Type(stream, google_protobuf_Type(msg))
proc toJsongoogle_protobuf_TypeImpl(msg: Message): JsonNode = toJson(google_protobuf_Type(msg))
proc fromJsongoogle_protobuf_TypeImpl(node: JsonNode): Message = parsegoogle_protobuf_Type(node)

proc google_protobuf_TypeProcs*(): MessageProcs =
    result.readImpl = readgoogle_protobuf_TypeImpl
    result.writeImpl = writegoogle_protobuf_TypeImpl
    result.toJsonImpl = toJsongoogle_protobuf_TypeImpl
    result.fromJsonImpl = fromJsongoogle_protobuf_TypeImpl

proc newgoogle_protobuf_Type*(): google_protobuf_Type =
    new(result)
    initMessage(result[])
    result.procs = google_protobuf_TypeProcs()
    result.name = ""
    result.fields = @[]
    result.oneofs = @[]
    result.options = @[]
    result.sourceContext = nil
    result.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc clearname*(message: google_protobuf_Type) =
    message.name = ""

proc setname*(message: google_protobuf_Type, value: string) =
    message.name = value

proc name*(message: google_protobuf_Type): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Type, value: string) {.inline.} =
    setname(message, value)

proc clearfields*(message: google_protobuf_Type) =
    message.fields = @[]
    clearFields(message, [2])

proc hasfields*(message: google_protobuf_Type): bool =
    result = hasField(message, 2) or (len(message.fields) > 0)

proc setfields*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) =
    message.fields = value
    setField(message, 2)

proc addfields*(message: google_protobuf_Type, value: google_protobuf_Field) =
    add(message.fields, value)

proc fields*(message: google_protobuf_Type): seq[google_protobuf_Field] {.inline.} =
    message.fields

proc `fields=`*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) {.inline.} =
    setfields(message, value)

proc clearoneofs*(message: google_protobuf_Type) =
    message.oneofs = @[]

proc setoneofs*(message: google_protobuf_Type, value: seq[string]) =
    message.oneofs = value

proc addoneofs*(message: google_protobuf_Type, value: string) =
    add(message.oneofs, value)

proc oneofs*(message: google_protobuf_Type): seq[string] {.inline.} =
    message.oneofs

proc `oneofs=`*(message: google_protobuf_Type, value: seq[string]) {.inline.} =
    setoneofs(message, value)

proc clearoptions*(message: google_protobuf_Type) =
    message.options = @[]
    clearFields(message, [4])

proc hasoptions*(message: google_protobuf_Type): bool =
    result = hasField(message, 4) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 4)

proc addoptions*(message: google_protobuf_Type, value: google_protobuf_Option) =
    add(message.options, value)

proc options*(message: google_protobuf_Type): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsourceContext*(message: google_protobuf_Type) =
    message.sourceContext = nil
    clearFields(message, [5])

proc hassourceContext*(message: google_protobuf_Type): bool =
    result = hasField(message, 5)

proc setsourceContext*(message: google_protobuf_Type, value: google_protobuf_SourceContext) =
    message.sourceContext = value
    setField(message, 5)

proc sourceContext*(message: google_protobuf_Type): google_protobuf_SourceContext {.inline.} =
    message.sourceContext

proc `sourceContext=`*(message: google_protobuf_Type, value: google_protobuf_SourceContext) {.inline.} =
    setsourceContext(message, value)

proc clearsyntax*(message: google_protobuf_Type) =
    message.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc setsyntax*(message: google_protobuf_Type, value: google_protobuf_Syntax) =
    message.syntax = value

proc syntax*(message: google_protobuf_Type): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Type, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64 =
    if len(message.name) > 0:
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    for value in message.fields:
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Field(value))
    for value in message.oneofs:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfString(value)
    for value in message.options:
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if hassourceContext(message):
        result = result + sizeOfTag(5, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_SourceContext(message.sourceContext))
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        result = result + sizeOfTag(6, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Syntax](message.syntax)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Type*(stream: Stream, message: google_protobuf_Type) =
    if len(message.name) > 0:
        protoWriteString(stream, message.name, 1)
    for value in message.fields:
        writeMessage(stream, value, 2)
    for value in message.oneofs:
        protoWriteString(stream, value, 3)
    for value in message.options:
        writeMessage(stream, value, 4)
    if hassourceContext(message):
        writeMessage(stream, message.sourceContext, 5)
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        protoWriteEnum(stream, message.syntax, 6)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Type*(stream: Stream): google_protobuf_Type =
    result = newgoogle_protobuf_Type()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addfields(result, newgoogle_protobuf_Field(data))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            addoneofs(result, protoReadString(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 5:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setsourceContext(result, newgoogle_protobuf_SourceContext(data))
        of 6:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, protoReadEnum[google_protobuf_Syntax](stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Type): JsonNode =
    result = newJObject()
    if len(message.name) > 0:
        result["name"] = %message.name
    if len(message.fields) > 0:
        let arr = newJArray()
        for value in message.fields:
            add(arr, toJson(value))
        result["fields"] = arr
    if len(message.oneofs) > 0:
        let arr = newJArray()
        for value in message.oneofs:
            add(arr, %value)
        result["oneofs"] = arr
    if len(message.options) > 0:
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if hassourceContext(message):
        result["sourceContext"] = toJson(message.sourceContext)
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        result["syntax"] = toJson(message.syntax)

proc parsegoogle_protobuf_Type*(obj: JsonNode): google_protobuf_Type =
    result = newgoogle_protobuf_Type()
    var node: JsonNode
    if obj.kind != JObject:
        raise newException(nimpb_json.ParseError, "object expected")
    node = getJsonField(obj, "name", "name")
    if node != nil and node.kind != JNull:
        setname(result, parseString(node))
    node = getJsonField(obj, "fields", "fields")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addfields(result, parsegoogle_protobuf_Field(value))
    node = getJsonField(obj, "oneofs", "oneofs")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addoneofs(result, parseString(value))
    node = getJsonField(obj, "options", "options")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addoptions(result, parsegoogle_protobuf_Option(value))
    node = getJsonField(obj, "source_context", "sourceContext")
    if node != nil and node.kind != JNull:
        setsourceContext(result, parsegoogle_protobuf_SourceContext(node))
    node = getJsonField(obj, "syntax", "syntax")
    if node != nil and node.kind != JNull:
        setsyntax(result, parseEnum[google_protobuf_Syntax](node))

proc serialize*(message: google_protobuf_Type): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Type(ss, message)
    result = ss.data

proc newgoogle_protobuf_Type*(data: string): google_protobuf_Type =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Type(ss)

proc newgoogle_protobuf_Type*(data: seq[byte]): google_protobuf_Type =
    let
        ss = newStringStream(cast[string](data))
    result = readgoogle_protobuf_Type(ss)


proc fullyQualifiedName*(T: typedesc[google_protobuf_EnumValue]): string = "google.protobuf.EnumValue"

proc readgoogle_protobuf_EnumValueImpl(stream: Stream): Message = readgoogle_protobuf_EnumValue(stream)
proc writegoogle_protobuf_EnumValueImpl(stream: Stream, msg: Message) = writegoogle_protobuf_EnumValue(stream, google_protobuf_EnumValue(msg))
proc toJsongoogle_protobuf_EnumValueImpl(msg: Message): JsonNode = toJson(google_protobuf_EnumValue(msg))
proc fromJsongoogle_protobuf_EnumValueImpl(node: JsonNode): Message = parsegoogle_protobuf_EnumValue(node)

proc google_protobuf_EnumValueProcs*(): MessageProcs =
    result.readImpl = readgoogle_protobuf_EnumValueImpl
    result.writeImpl = writegoogle_protobuf_EnumValueImpl
    result.toJsonImpl = toJsongoogle_protobuf_EnumValueImpl
    result.fromJsonImpl = fromJsongoogle_protobuf_EnumValueImpl

proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue =
    new(result)
    initMessage(result[])
    result.procs = google_protobuf_EnumValueProcs()
    result.name = ""
    result.number = 0
    result.options = @[]

proc clearname*(message: google_protobuf_EnumValue) =
    message.name = ""

proc setname*(message: google_protobuf_EnumValue, value: string) =
    message.name = value

proc name*(message: google_protobuf_EnumValue): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_EnumValue, value: string) {.inline.} =
    setname(message, value)

proc clearnumber*(message: google_protobuf_EnumValue) =
    message.number = 0

proc setnumber*(message: google_protobuf_EnumValue, value: int32) =
    message.number = value

proc number*(message: google_protobuf_EnumValue): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_EnumValue, value: int32) {.inline.} =
    setnumber(message, value)

proc clearoptions*(message: google_protobuf_EnumValue) =
    message.options = @[]
    clearFields(message, [3])

proc hasoptions*(message: google_protobuf_EnumValue): bool =
    result = hasField(message, 3) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 3)

proc addoptions*(message: google_protobuf_EnumValue, value: google_protobuf_Option) =
    add(message.options, value)

proc options*(message: google_protobuf_EnumValue): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64 =
    if len(message.name) > 0:
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if message.number != 0:
        result = result + sizeOfTag(2, WireType.Varint)
        result = result + sizeOfInt32(message.number)
    for value in message.options:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_EnumValue*(stream: Stream, message: google_protobuf_EnumValue) =
    if len(message.name) > 0:
        protoWriteString(stream, message.name, 1)
    if message.number != 0:
        protoWriteInt32(stream, message.number, 2)
    for value in message.options:
        writeMessage(stream, value, 3)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_EnumValue*(stream: Stream): google_protobuf_EnumValue =
    result = newgoogle_protobuf_EnumValue()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, protoReadInt32(stream))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_EnumValue): JsonNode =
    result = newJObject()
    if len(message.name) > 0:
        result["name"] = %message.name
    if message.number != 0:
        result["number"] = %message.number
    if len(message.options) > 0:
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr

proc parsegoogle_protobuf_EnumValue*(obj: JsonNode): google_protobuf_EnumValue =
    result = newgoogle_protobuf_EnumValue()
    var node: JsonNode
    if obj.kind != JObject:
        raise newException(nimpb_json.ParseError, "object expected")
    node = getJsonField(obj, "name", "name")
    if node != nil and node.kind != JNull:
        setname(result, parseString(node))
    node = getJsonField(obj, "number", "number")
    if node != nil and node.kind != JNull:
        setnumber(result, parseSignedInt[int32](node))
    node = getJsonField(obj, "options", "options")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addoptions(result, parsegoogle_protobuf_Option(value))

proc serialize*(message: google_protobuf_EnumValue): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_EnumValue(ss, message)
    result = ss.data

proc newgoogle_protobuf_EnumValue*(data: string): google_protobuf_EnumValue =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_EnumValue(ss)

proc newgoogle_protobuf_EnumValue*(data: seq[byte]): google_protobuf_EnumValue =
    let
        ss = newStringStream(cast[string](data))
    result = readgoogle_protobuf_EnumValue(ss)


proc fullyQualifiedName*(T: typedesc[google_protobuf_Enum]): string = "google.protobuf.Enum"

proc readgoogle_protobuf_EnumImpl(stream: Stream): Message = readgoogle_protobuf_Enum(stream)
proc writegoogle_protobuf_EnumImpl(stream: Stream, msg: Message) = writegoogle_protobuf_Enum(stream, google_protobuf_Enum(msg))
proc toJsongoogle_protobuf_EnumImpl(msg: Message): JsonNode = toJson(google_protobuf_Enum(msg))
proc fromJsongoogle_protobuf_EnumImpl(node: JsonNode): Message = parsegoogle_protobuf_Enum(node)

proc google_protobuf_EnumProcs*(): MessageProcs =
    result.readImpl = readgoogle_protobuf_EnumImpl
    result.writeImpl = writegoogle_protobuf_EnumImpl
    result.toJsonImpl = toJsongoogle_protobuf_EnumImpl
    result.fromJsonImpl = fromJsongoogle_protobuf_EnumImpl

proc newgoogle_protobuf_Enum*(): google_protobuf_Enum =
    new(result)
    initMessage(result[])
    result.procs = google_protobuf_EnumProcs()
    result.name = ""
    result.enumvalue = @[]
    result.options = @[]
    result.sourceContext = nil
    result.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc clearname*(message: google_protobuf_Enum) =
    message.name = ""

proc setname*(message: google_protobuf_Enum, value: string) =
    message.name = value

proc name*(message: google_protobuf_Enum): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Enum, value: string) {.inline.} =
    setname(message, value)

proc clearenumvalue*(message: google_protobuf_Enum) =
    message.enumvalue = @[]
    clearFields(message, [2])

proc hasenumvalue*(message: google_protobuf_Enum): bool =
    result = hasField(message, 2) or (len(message.enumvalue) > 0)

proc setenumvalue*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) =
    message.enumvalue = value
    setField(message, 2)

proc addenumvalue*(message: google_protobuf_Enum, value: google_protobuf_EnumValue) =
    add(message.enumvalue, value)

proc enumvalue*(message: google_protobuf_Enum): seq[google_protobuf_EnumValue] {.inline.} =
    message.enumvalue

proc `enumvalue=`*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) {.inline.} =
    setenumvalue(message, value)

proc clearoptions*(message: google_protobuf_Enum) =
    message.options = @[]
    clearFields(message, [3])

proc hasoptions*(message: google_protobuf_Enum): bool =
    result = hasField(message, 3) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 3)

proc addoptions*(message: google_protobuf_Enum, value: google_protobuf_Option) =
    add(message.options, value)

proc options*(message: google_protobuf_Enum): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsourceContext*(message: google_protobuf_Enum) =
    message.sourceContext = nil
    clearFields(message, [4])

proc hassourceContext*(message: google_protobuf_Enum): bool =
    result = hasField(message, 4)

proc setsourceContext*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) =
    message.sourceContext = value
    setField(message, 4)

proc sourceContext*(message: google_protobuf_Enum): google_protobuf_SourceContext {.inline.} =
    message.sourceContext

proc `sourceContext=`*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) {.inline.} =
    setsourceContext(message, value)

proc clearsyntax*(message: google_protobuf_Enum) =
    message.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc setsyntax*(message: google_protobuf_Enum, value: google_protobuf_Syntax) =
    message.syntax = value

proc syntax*(message: google_protobuf_Enum): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Enum, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64 =
    if len(message.name) > 0:
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    for value in message.enumvalue:
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_EnumValue(value))
    for value in message.options:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if hassourceContext(message):
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_SourceContext(message.sourceContext))
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        result = result + sizeOfTag(5, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Syntax](message.syntax)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Enum*(stream: Stream, message: google_protobuf_Enum) =
    if len(message.name) > 0:
        protoWriteString(stream, message.name, 1)
    for value in message.enumvalue:
        writeMessage(stream, value, 2)
    for value in message.options:
        writeMessage(stream, value, 3)
    if hassourceContext(message):
        writeMessage(stream, message.sourceContext, 4)
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        protoWriteEnum(stream, message.syntax, 5)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Enum*(stream: Stream): google_protobuf_Enum =
    result = newgoogle_protobuf_Enum()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addenumvalue(result, newgoogle_protobuf_EnumValue(data))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setsourceContext(result, newgoogle_protobuf_SourceContext(data))
        of 5:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, protoReadEnum[google_protobuf_Syntax](stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Enum): JsonNode =
    result = newJObject()
    if len(message.name) > 0:
        result["name"] = %message.name
    if len(message.enumvalue) > 0:
        let arr = newJArray()
        for value in message.enumvalue:
            add(arr, toJson(value))
        result["enumvalue"] = arr
    if len(message.options) > 0:
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if hassourceContext(message):
        result["sourceContext"] = toJson(message.sourceContext)
    if message.syntax != google_protobuf_Syntax.SYNTAX_PROTO2:
        result["syntax"] = toJson(message.syntax)

proc parsegoogle_protobuf_Enum*(obj: JsonNode): google_protobuf_Enum =
    result = newgoogle_protobuf_Enum()
    var node: JsonNode
    if obj.kind != JObject:
        raise newException(nimpb_json.ParseError, "object expected")
    node = getJsonField(obj, "name", "name")
    if node != nil and node.kind != JNull:
        setname(result, parseString(node))
    node = getJsonField(obj, "enumvalue", "enumvalue")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addenumvalue(result, parsegoogle_protobuf_EnumValue(value))
    node = getJsonField(obj, "options", "options")
    if node != nil and node.kind != JNull:
        if node.kind != JArray:
            raise newException(ValueError, "not an array")
        for value in node:
            addoptions(result, parsegoogle_protobuf_Option(value))
    node = getJsonField(obj, "source_context", "sourceContext")
    if node != nil and node.kind != JNull:
        setsourceContext(result, parsegoogle_protobuf_SourceContext(node))
    node = getJsonField(obj, "syntax", "syntax")
    if node != nil and node.kind != JNull:
        setsyntax(result, parseEnum[google_protobuf_Syntax](node))

proc serialize*(message: google_protobuf_Enum): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Enum(ss, message)
    result = ss.data

proc newgoogle_protobuf_Enum*(data: string): google_protobuf_Enum =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Enum(ss)

proc newgoogle_protobuf_Enum*(data: seq[byte]): google_protobuf_Enum =
    let
        ss = newStringStream(cast[string](data))
    result = readgoogle_protobuf_Enum(ss)


